name: Deploy Kinesis Pipeline

on:
  workflow_dispatch:
    inputs:
      region:
        description: "AWS region to deploy to"
        required: true
        default: "ap-southeast-2"
      deployS3:
        description: "Deploy AWS S3s?"
        required: true
        default: "false"
      deployVPC:
        description: "Deploy AWS VPC?"
        required: true
        default: "false"
      deployMlPipeline:
        description: "Deploy AWS ML Pipeline?"
        required: true
        default: "false"
      deployRealTimePipeline:
        description: "Deploy AWS Real Time Pipeline?"
        required: true
        default: "false"
jobs:
  deploy-pipeline:
    runs-on: ubuntu-latest
    env:
      TF_VERSION: 1.6.0
    steps:
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Lambda Packages
        working-directory: modules/lambda
        run: |
          ./create_package.sh

      - name: Glue package wheels
        working-directory: modules/glue-job
        run: |
          ./create_wheel.sh

      - name: Terraform init
        working-directory: environments/dev
        run: |
          terraform init

      - name: Deploy S3
        if: ${{ github.event.inputs.deployS3 == 'true' }}
        working-directory: environments/dev
        run: |
          terraform plan -target=module.s3
          terraform apply -auto-approve

      - name: Deploy VPC
        if: ${{ github.event.inputs.deployVPC == 'true' }}
        working-directory: environments/dev
        run: |
          terraform plan -target=module.vpc
          terraform apply -auto-approve

      - name: Deploy Glue Job, DynamoDB, Sagemaker Endpoint, Step Functions
        if: ${{ github.event.inputs.deployMlPipeline == 'true' }}
        working-directory: environments/dev
        run: |
          terraform plan -target=module.glue_job -target=module.dynamodb -target=module.step_functions
          terraform apply -auto-approve

      - name: Execute Step Functions
        if: ${{ github.event.inputs.deployMlPipeline == 'true' }}
        run: |
          make execute-step-function

      - name: Deploy Lambda and API Gateway
        if: ${{ github.event.inputs.deployRealTimePipeline == 'true' }}
        working-directory: environments/dev
        run: |
          terraform plan -var="lambda_architecture=x86_64" -target=module.lambda -target=module.api_gateway
          terraform apply -auto-approve

      - name: Deploy Kinesis Pipeline
        if: ${{ github.event.inputs.deployRealTimePipeline == 'true' }}
        working-directory: environments/dev
        run: |
          terraform plan -target=module.kinesis -target=module.lambda -target=module.api_gateway
          terraform apply -auto-approve

      - name: Deploy Webapp and Cloudfront
        if: ${{ github.event.inputs.deployRealTimePipeline == 'true' }}
        working-directory: environments/dev
        run: |
          terraform plan -target=module.cloudfront -target=module.s3_webapp
          terraform apply -auto-approve

      - name: Update API URL and Webapp
        if: ${{ github.event.inputs.deployRealTimePipeline == 'true' }}
        run: |
          make update-api-url
          make deploy-webapp
